diff --git a/node_modules/trezor-connect/lib/core/methods/ApplySettings.js b/node_modules/trezor-connect/lib/core/methods/ApplySettings.js
index 78af672..d9acf04 100644
--- a/node_modules/trezor-connect/lib/core/methods/ApplySettings.js
+++ b/node_modules/trezor-connect/lib/core/methods/ApplySettings.js
@@ -57,7 +57,7 @@ var ApplySettings = /*#__PURE__*/function (_AbstractMethod) {
       type: 'number'
     }, {
       name: 'safety_checks',
-      type: 'number'
+      type: 'string'
     }]);
     _this.params = {
       language: payload.language,
diff --git a/node_modules/trezor-connect/lib/core/methods/ApplySettings.js.flow b/node_modules/trezor-connect/lib/core/methods/ApplySettings.js.flow
index 8b2f33f..03a3f0c 100644
--- a/node_modules/trezor-connect/lib/core/methods/ApplySettings.js.flow
+++ b/node_modules/trezor-connect/lib/core/methods/ApplySettings.js.flow
@@ -26,7 +26,7 @@ export default class ApplySettings extends AbstractMethod {
             { name: 'passphrase_always_on_device', type: 'boolean' },
             { name: 'auto_lock_delay_ms', type: 'number' },
             { name: 'display_rotation', type: 'number' },
-            { name: 'safety_checks', type: 'number' },
+            { name: 'safety_checks', type: 'string' },
         ]);
 
         this.params = {
diff --git a/node_modules/trezor-connect/lib/types/trezor/management.js.flow b/node_modules/trezor-connect/lib/types/trezor/management.js.flow
index d56a98b..4410137 100644
--- a/node_modules/trezor-connect/lib/types/trezor/management.js.flow
+++ b/node_modules/trezor-connect/lib/types/trezor/management.js.flow
@@ -1,5 +1,7 @@
 /* @flow */
 
+import type { SafetyCheckLevel } from './protobuf';
+
 export type ResetDevice = {
     strength?: number;
     label?: string;
@@ -16,6 +18,7 @@ export type ApplySettings = {
     display_rotation?: 0 | 90 | 180 | 270;
     use_passphrase?: boolean;
     label?: string;
+    safety_checks?: SafetyCheckLevel;
 }
 
 export type ApplyFlags = {
diff --git a/node_modules/trezor-connect/lib/typescript/trezor/management.d.ts b/node_modules/trezor-connect/lib/typescript/trezor/management.d.ts
index 4d2346a..f2405c4 100644
--- a/node_modules/trezor-connect/lib/typescript/trezor/management.d.ts
+++ b/node_modules/trezor-connect/lib/typescript/trezor/management.d.ts
@@ -1,3 +1,5 @@
+import type { SafetyCheckLevel } from './protobuf';
+
 export interface ResetDevice {
     strength?: number;
     label?: string;
@@ -14,6 +16,7 @@ export interface ApplySettings {
     display_rotation?: 0 | 90 | 180 | 270;
     use_passphrase?: boolean;
     label?: string;
+    safety_checks?: SafetyCheckLevel;
 }
 
 export interface ApplyFlags {
diff --git a/node_modules/trezor-connect/lib/typescript/trezor/protobuf.d.ts b/node_modules/trezor-connect/lib/typescript/trezor/protobuf.d.ts
index f66bc62..aad988a 100644
--- a/node_modules/trezor-connect/lib/typescript/trezor/protobuf.d.ts
+++ b/node_modules/trezor-connect/lib/typescript/trezor/protobuf.d.ts
@@ -59,11 +59,12 @@ export enum Enum_BackupType {
 }
 export type BackupType = keyof typeof Enum_BackupType;
 
-export enum SafetyCheckLevel {
+export enum Enum_SafetyCheckLevel {
     Strict = 0,
     PromptAlways = 1,
     PromptTemporarily = 2,
 }
+export type SafetyCheckLevel = keyof typeof Enum_SafetyCheckLevel;
 
 // BinanceGetAddress
 export type BinanceGetAddress = {
@@ -1362,7 +1363,7 @@ export type Features = {
     wipe_code_protection?: boolean;
     session_id?: string;
     passphrase_always_on_device?: boolean;
-    safety_checks?: SafetyCheckLevel;
+    safety_checks?: SafetyCheckLevel | null;
     auto_lock_delay_ms?: number;
     display_rotation?: number;
     experimental_features?: boolean;
